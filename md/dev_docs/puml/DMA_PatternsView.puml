
@startuml

skinparam backgroundColor #FEFEFE
skinparam wrapWidth 600
package "DMA_Common" #DDDDDD
{

class "CTreeItem"
{
}

}

package "DMA_PatternsView" #DDDDDD
{

class "CPatternsModel"
{
}

}

package "DMA_PatternsView_API" #DDDDDD
{

class "CPatternsView"
{
}

class "CPatternsViewComponent"
{
}

class "IPatternsModel"
{
    + {abstract} virtual QModelIndex addData(const QString& alias, const QString& regex, Qt::CheckState isCombine, Qt::CheckState isDefault) = 0
    + {abstract} virtual QModelIndex addData(const QString& alias, const QString& regex, Qt::CheckState isDefault = Qt::Unchecked) = 0
    + {abstract} virtual QModelIndex editData(const QModelIndex& idx, const QString& alias, const QString& regex, Qt::CheckState isDefault, Qt::CheckState isCombine) = 0
    + {abstract} virtual QString getAliasEditName( const QModelIndex& idx ) = 0
    + {abstract} virtual removeData(const QModelIndex& idx) = 0
    + {abstract} virtual tSearchResult search( const QString& alias ) = 0
    + {abstract} virtual void filterPatterns( const QString& filter ) = 0
    + {abstract} virtual void resetData() = 0
    + {abstract} virtual void updatePatternsInPersistency() = 0
    + {abstract} virtual void updateView() = 0
}

}

package "DMA_Settings_API" #DDDDDD
{

class "CSettingsManagerClient"
{
}

}

package "Qt" #DDDDDD
{

abstract class "QAbstractItemModel"
{
}

}

'====================Inheritance section====================
CSettingsManagerClient <|-- CPatternsModel : extends
IPatternsModel <|-- CPatternsModel : implements
QAbstractItemModel <|-- CPatternsModel : implements

'====================Dependencies section====================
CPatternsModel "1" *-- "*" CTreeItem : contains
CPatternsView "1" o-- "1" CPatternsModel : uses
CPatternsViewComponent "1" --> "1" CPatternsModel : using to create IPatternsModel

@enduml
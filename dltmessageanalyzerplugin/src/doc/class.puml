@startuml

'QT's classes
class QWidget
class QObject
class QMainWindow

'DLT viewer's internal classes
class MainWindow

'DLT viewer's SDK classes
interface QDLTPluginInterface
{
    {abstract} virtual QString name()=0
    {abstract} virtual QString description()=0
    {abstract} virtual QString pluginVersion()=0
    {abstract} virtual QString pluginInterfaceVersion()=0
    {abstract} virtual QString error()=0
    {abstract} virtual bool loadConfig(QString filename)=0
    {abstract} virtual bool saveConfig(QString filename)=0
    {abstract} virtual QStringList infoConfig()=0
}

interface QDltPluginViewerInterface
{
    {abstract} virtual QWidget* initViewer()=0
    {abstract} virtual void initFileStart(QDltFile *file)=0
    {abstract} virtual void initMsg(int index, QDltMsg &msg )=0
    {abstract} virtual void initMsgDecoded(int index, QDltMsg &msg )=0
    {abstract} virtual void initFileFinish()=0
    {abstract} virtual void updateFileStart( )=0
    {abstract} virtual void updateMsg(int index, QDltMsg &msg )=0
    {abstract} virtual void updateMsgDecoded(int index, QDltMsg &msg )=0
    {abstract} virtual void updateFileFinish( )=0
    {abstract} virtual void selectedIdxMsg(int index, QDltMsg &msg)=0
    {abstract} virtual void selectedIdxMsgDecoded(int index, QDltMsg &msg)=0
}

interface QDltPluginControlInterface
{
    {abstract} virtual bool initControl(QDltControl *control)=0
    {abstract} virtual bool initConnections(QStringList list)=0
    {abstract} virtual bool controlMsg(int index, QDltMsg &msg)=0
    {abstract} virtual bool stateChanged(int index, QDltConnection::QDltConnectionState connectionState,QString hostname)=0
    {abstract} virtual bool autoscrollStateChanged(bool enabled)=0
    {abstract} virtual void initMessageDecoder(QDltMessageDecoder* /*messageDecoder*/)=0
    {abstract} virtual void initMainTableView(QTableView* pTableView)=0
    {abstract} virtual void configurationChanged()=0
}

class QDltPluginManager

'Plugin's classes
class DLTMessageAnalyzerPlugin
{
    --Implementation of QDLTPluginInterface--
    +virtual QString name() override
    +virtual QString description() override
    +virtual QString pluginVersion() override
    +virtual QString pluginInterfaceVersion() override
    +virtual QString error() override
    +virtual bool loadConfig(QString filename) override
    +virtual bool saveConfig(QString filename) override
    +virtual QStringList infoConfig() override
	
	--Implementation of QDltPluginViewerInterface--
	+virtual QWidget* initViewer() override
    +virtual void initFileStart(QDltFile *file) override
    +virtual void initMsg(int index, QDltMsg &msg ) override
    +virtual void initMsgDecoded(int index, QDltMsg &msg ) override
    +virtual void initFileFinish() override
    +virtual void updateFileStart() override
    +virtual void updateMsg(int index, QDltMsg &msg ) override
    +virtual void updateMsgDecoded(int index, QDltMsg &msg ) override
    +virtual void updateFileFinish( ) override
    +virtual void selectedIdxMsg(int index, QDltMsg &msg) override
    +virtual void selectedIdxMsgDecoded(int index, QDltMsg &msg) override
	
	--Implementation of QDltPluginControlInterface--
	+virtual bool initControl(QDltControl *control) override
    +virtual bool initConnections(QStringList list) override
    +virtual bool controlMsg(int index, QDltMsg &msg) override
    +virtual bool stateChanged(int index, QDltConnection::QDltConnectionState connectionState,QString hostname) override
    +virtual bool autoscrollStateChanged(bool enabled) override
    +virtual void initMessageDecoder(QDltMessageDecoder* /*messageDecoder*/) override
    +virtual void initMainTableView(QTableView* pTableView) override
    +virtual void configurationChanged() override
}

class Form

abstract class IDLTMessageAnalyzerControllerConsumer
{
    {static} +template<typename T, typename ... Args > std::shared_ptr<T> createInstance( Args&& ... args  ) 
	+virtual ~IDLTMessageAnalyzerControllerConsumer()
    {abstract} +slot virtual void progressNotification( const tRequestId& requestId,\n\
                                       const eRequestState& requestState,\n\
                                       const int8_t& progress,\n\
                                       const tFoundMatchesPack& processedMatches)=0
    #IDLTMessageAnalyzerControllerConsumer( const std::weak_ptr<IDLTMessageAnalyzerController>& pController )
    #tRequestId requestAnalyze( const tDLTFileWrapperPtr& pFile,\n\
                               const int& fromMessage,\n\
                               const int& numberOfMessages,\n\
                               const QRegularExpression& regex,\n\
                               const int& numberOfThreads,\n\
                               bool isContinuous )
    #void cancelRequest( const tRequestId& requestId )
}

class CDLTMessageAnalyzer
{
    --Implementation of IDLTMessageAnalyzerControllerConsumer--
	{abstract} +slot virtual void progressNotification( const tRequestId& requestId,\n\
                                       const eRequestState& requestState,\n\
                                       const int8_t& progress,\n\
                                       const tFoundMatchesPack& processedMatches)=0
}

abstract class IDLTMessageAnalyzerController
{
    {static} + template<typename T, typename ... Args > std::shared_ptr<T> createInstance( Args&& ... args  )
    +virtual ~IDLTMessageAnalyzerController()
    {abstract} +virtual tRequestId requestAnalyze( const std::weak_ptr<IDLTMessageAnalyzerControllerConsumer>& pClient,\n\
                                       const tDLTFileWrapperPtr& pFile,\n\
                                       const int& fromMessage,\n\
                                       const int& numberOfMessages,\n\
                                       const QRegularExpression& regex,\n\
                                       const int& numberOfThreads,\n\
                                       const tRegexScriptingMetadata& regexScriptingMetadata,\n\
                                       bool isContinuous)=0
    +virtual void cancelRequest( const std::weak_ptr<IDLTMessageAnalyzerControllerConsumer>& pClient, const tRequestId& requestId )=0
    +virtual int getMaximumNumberOfThreads() const = 0
    #IDLTMessageAnalyzerController()
    #void signal progressNotification( const tRequestId& requestId,\n\
                                       const eRequestState& requestState,\n\
                                       const int8_t& progress,\n\
                                       const tFoundMatchesPack& processedMatches,\n\
                                       bool isContinuous )
}

'Inheritance section
QDLTPluginInterface <|-- DLTMessageAnalyzerPlugin : implements
QDltPluginViewerInterface <|-- DLTMessageAnalyzerPlugin : implements
QDltPluginControlInterface <|-- DLTMessageAnalyzerPlugin : implements
QObject <|-- DLTMessageAnalyzerPlugin
IDLTMessageAnalyzerControllerConsumer <|-- CDLTMessageAnalyzer
QWidget <|- Form
QObject <|- IDLTMessageAnalyzerControllerConsumer
QObject <|- IDLTMessageAnalyzerController
QMainWindow <|- MainWindow

'Composition section
QDltPluginManager "1" *--- "many" QDLTPluginInterface : contains
QDltPluginManager "1" *--- "many" QDltPluginViewerInterface : contains
QDltPluginManager "1" *--- "many" QDltPluginControlInterface : contains
DLTMessageAnalyzerPlugin "1" *-- "1" CDLTMessageAnalyzer : contains
MainWindow "1" *- "1" QDltPluginManager : contains
MainWindow "1" *- "1" Form : obtains, uses and destroyes

'Agregation section
DLTMessageAnalyzerPlugin "1" o-- "1" Form : creates, provides & uses
DLTMessageAnalyzerPlugin "1" o-- "1" IDLTMessageAnalyzerController : creates & provides
CDLTMessageAnalyzer "1" o-- "1" IDLTMessageAnalyzerController : obtains & uses to perform search operations
CDLTMessageAnalyzer "1" o-- "1" Form : obtains & uses

@enduml
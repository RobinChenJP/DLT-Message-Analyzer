name: Build windows

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_windows:
    
    runs-on: windows-latest

    steps:
 
    # Caching the Qt
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ..\Qt
        key: ${{ runner.os }}-QtCache

    # Installation of the Qt
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
         version: 5.15.0
         target: desktop
         host: windows
         dir: ..\Qt 
         cached: ${{ steps.cache-qt.outputs.cache-hit }}
         
    # Creation of the ..\downloads directory
    - name: Creation of the "..\downloads" directory
      run: mkdir ..\downloads
      shell: cmd
      working-directory: .\
    
    # Creation of the ..\tools directory
    - name: Creation of the "..\tools" directory
      run: mkdir ..\tools
      shell: cmd
      working-directory: .\
         
    # Installation of jom
    - name: Installation of the jom
      run: |
           Invoke-WebRequest http://download.qt.io/official_releases/jom/jom.zip -OutFile ..\downloads\jom.zip
           Expand-Archive '..\downloads\jom.zip' '..\tools\jom' 
      shell: powershell
      
    # Add jom to path
    - name: Add jom to path
      run: |
           echo "D:/a/${{ github.event.repository.name }}/tools/jom/" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      shell: powershell

    # Checkout dlt-viewer's revision 2.20.1
    - name: Checkout of the dlt-viewer
      uses: actions/checkout@v2
      with:
        repository: GENIVI/dlt-viewer
        ref: v2.20.1

    # Checkout project's revision, which is pushed
    - name: Checkout of the project
      uses: actions/checkout@v2
      with:
        repository: svlad-90/${{ github.event.repository.name }}
        path: .\plugin\${{ github.event.repository.name }}
        ref: ${{ github.ref }}
        
    # Adjust dlt-viewer's  main CMakeLists.txt in order to avoid setting gcc specific compiler flags
    - name: Patch dlt-viewer's CMakeLists.txt
      run: |
         $filePath = ".\CMakeLists.txt"
         $find_1 = "SET(CMAKE_C_FLAGS  ""`${CMAKE_C_FLAGS} -std=gnu99"")"
         $replace_1 = "{0}if(NOT CMAKE_CXX_COMPILER_ID MATCHES ""MSVC""){1}{2}" -f [environment]::NewLine, [environment]::NewLine, $find_1
         (Get-Content $filePath).Replace( $find_1 , $replace_1 ) | Set-Content $filePath
         $find_2 = "add_definitions( ""-Wno-strict-aliasing"" )"
         $replace_2 = "{0}{1}endif()" -f $find_2, [environment]::NewLine
         (Get-Content $filePath).Replace( $find_2 , $replace_2 ) | Set-Content $filePath
      shell: powershell
        
    # Adjust dlt-viewer's plugin CMakeLists.txt file to sub-include the plugin
    - name: Patch dlt-viewer's plugin CMakeLists.txt
      run: Add-Content .\CMakeLists.txt "`nadd_subdirectory(${{ github.event.repository.name }}/dltmessageanalyzerplugin/src)"
      shell: powershell
      working-directory: .\plugin

    # Create build directory
    - name: Creation of the ".\build" directory
      run: mkdir ..\build
      shell: cmd
      working-directory: .\

    #CMake for dlt-viewer, including the DLT-Message_analyzer plugin
    - name: CMake
      run: |
        call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsx86_amd64.bat"
        cmake ..\${{ github.event.repository.name }}\ "-GCodeBlocks - NMake Makefiles JOM" "-DCMAKE_BUILD_TYPE:STRING=Release" "-DCMAKE_PREFIX_PATH:STRING=../Qt/Qt/5.15.0/msvc2019_64" "-DQT_QMAKE_EXECUTABLE:STRING=../Qt/Qt/5.15.0/msvc2019_64/bin/qmake.exe"
      shell: cmd
      working-directory: ..\build
    
    #List files in build folder
    - name: List files in build folder
      run: |
        dir
      shell: cmd
      working-directory: ..\build
    
    # Build of the project
    - name: Jom
      run: |
        call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsx86_amd64.bat"
        jom.exe -j8
      shell: cmd
      working-directory: ..\build
